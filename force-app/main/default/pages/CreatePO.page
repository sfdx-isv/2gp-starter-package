<apex:page controller="CreatePOController">
    <apex:form>
        <apex:inputText value="{!searchString}" onkeypress="return executeOnEnter(event)" />
        <apex:commandButton value="Search" action="{!search}" rerender="approvedVendorTable" />
        <apex:actionFunction name="executeAction" action="{!search}" rerender="approvedVendorTable" />
    </apex:form>
    <apex:form>
        <apex:pageBlock id="approvedVendorTable" title="New Purchase Order">
            <apex:pageBlockTable value="{!approvedVendors}" var="approvedVendor" rendered="{!NOT(ISNULL(approvedVendors))}">
                <apex:column>
                    <apex:facet name="header">Select</apex:facet>
                    <apex:selectRadio value="{!approvedVendor.Id}">
                        <apex:selectOptions value="{!selectedVendorIds}" />
                    </apex:selectRadio>
                </apex:column>
                <apex:column>
                    <apex:facet name="header">Vendor Name</apex:facet>
                    <apex:outputText value="{!approvedVendor.Name}" />
                </apex:column>
            </apex:pageBlockTable>
            <apex:pageBlockSection>
                <apex:inputText value="{!description}" label="Description of Purchase" />
                <apex:inputText value="{!totalCost}" label="Total Cost of Purchase" />
            </apex:pageBlockSection>
            <apex:commandButton value="Save" action="{!save}" />
        </apex:pageBlock>
    </apex:form>
    <script>
        function executeOnEnter(event) {
            // Check if the key pressed is the RETURN key (key code 13)
            if (event.keyCode === 13) {
                executeAction();  // This is the name of the apex:actionFunction
                return false;     // Prevents the default form submission
            }
            return true;
        }
    </script>
</apex:page>